# declare an arrays from vagrant config file
array_ip=( $( cat ./for_vagrant/vagrant_config.yaml | \
    grep ip | awk -F ": " '{print $2}' | tr -d \" ) )

array_hosts=( $(cat ./for_vagrant/vagrant_config.yaml | \
    grep vagrant_name | awk -F ": " '{print $2}' | tr -d \") )

hw_number=$(cat ./for_vagrant/vagrant_config.yaml | \
    grep "HW_number:" | awk -F ": " '{print $2}')

## Get length of array
hosts_count=${#array_hosts[@]}

function check_vagrant_plugins_installed() {
    vagrant_plugins=( 
        'vagrant-timezone'
    )
    for plugin in "${vagrant_plugins[@]}"
    do 
        # If plugin not installed, then install
        if ! (vagrant plugin list | grep -q $plugin); then
            vagrant plugin install $plugin
        fi
    done
}

function add_ssh_fingerprint() {
    # get length of an array
    array_length=${#array_ip[@]}

    for (( i=0; i<${array_length}; i++ )); do
        # remove entries from '~/.ssh/known_hosts' on host machine 
        ssh-keygen -R ${array_ip[$i]} 
        # adding fingerprint from remote server to host machine
        ssh-keyscan ${array_ip[$i]} >> ~/.ssh/known_hosts 
    done
}

## Edit '~/.ssh/config'
function add_ssh_config() {
    for ((i=0;i<hosts_count;i++)); do
        ssh_config_str="${ssh_config_str}Host ${array_hosts[$i]}\n\tUser vagrant\n\tHostName ${array_ip[$i]}\n"
    done
    pre_ssh_config_str="## This block is autogenerated by Vagrant HW number '${hw_number}'"
    ssh_config_str="\n\n${pre_ssh_config_str}\n${ssh_config_str}"
    # Remove last newline character
    ssh_config_str=$(echo "$ssh_config_str" | sed '$d') 
    if ! grep -q "$pre_ssh_config_str" $HOME/.ssh/config; then
        echo "$ssh_config_str" >> $HOME/.ssh/config
    fi
}

TIMEFORMAT='  ***** ELAPSED TIME: %0lR *****  '
time {
    mkdir -p commands_output_logs

    (cd for_vagrant/ && \
    check_vagrant_plugins_installed && \
    vagrant destroy -f && \
    vagrant up && \
    add_ssh_fingerprint && \
    add_ssh_config && \
    vagrant snapshot save initial_setup) \
    | tee ./commands_output_logs/vagrant_commands_output.log
}
